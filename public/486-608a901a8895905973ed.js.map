{"version":3,"file":"486-608a901a8895905973ed.js","mappings":"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","sources":["webpack://studio-prismic-starter/./node_modules/camelcase/index.js","webpack://studio-prismic-starter/../src/image-utils.ts","webpack://studio-prismic-starter/../src/components/hooks.ts","webpack://studio-prismic-starter/../src/components/layout-wrapper.tsx","webpack://studio-prismic-starter/../src/components/picture.tsx","webpack://studio-prismic-starter/../src/components/placeholder.tsx","webpack://studio-prismic-starter/../src/components/main-image.tsx","webpack://studio-prismic-starter/../src/components/gatsby-image.server.tsx","webpack://studio-prismic-starter/../src/components/gatsby-image.browser.tsx","webpack://studio-prismic-starter/../src/components/static-image.server.tsx","webpack://studio-prismic-starter/../src/components/static-image.tsx","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/types/model/types.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/types/model/sliceZone.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/helpers/isFilled.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/escapeHTML.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/serializerHelpers.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/types/value/richText.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/richtext/asTree.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/richtext/serialize.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/richtext/types.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/helpers/asHTML.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/richtext/wrapMapSerializer.js","webpack://studio-prismic-starter/./node_modules/imgix-url-builder/dist/index.mjs","webpack://studio-prismic-starter/../../src/constants.ts","webpack://studio-prismic-starter/./node_modules/tslib/tslib.es6.mjs","webpack://studio-prismic-starter/./node_modules/lower-case/dist.es2015/index.js","webpack://studio-prismic-starter/./node_modules/no-case/dist.es2015/index.js","webpack://studio-prismic-starter/./node_modules/pascal-case/dist.es2015/index.js","webpack://studio-prismic-starter/../../../src/lib/pascalCase.ts","webpack://studio-prismic-starter/../../../src/lib/uuid.ts","webpack://studio-prismic-starter/../../../src/lib/normalizeDocument.ts","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/richtext/composeSerializers.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/helpers/asText.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/richtext/asText.js","webpack://studio-prismic-starter/../../../src/lib/fetchLinkedDocuments.ts","webpack://studio-prismic-starter/../../../src/lib/isReleasePreview.ts","webpack://studio-prismic-starter/../../../src/lib/fetchNewDocuments.ts","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/getGraphQLEndpoint.js","webpack://studio-prismic-starter/../../../src/lib/fetchPublishedDocumentIDs.ts","webpack://studio-prismic-starter/../../../src/lib/bootstrapPrismicPreview.ts"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","const CustomTypeModelFieldType = {\n  Boolean: \"Boolean\",\n  Color: \"Color\",\n  Date: \"Date\",\n  Embed: \"Embed\",\n  GeoPoint: \"GeoPoint\",\n  Group: \"Group\",\n  Image: \"Image\",\n  Integration: \"IntegrationFields\",\n  Link: \"Link\",\n  Number: \"Number\",\n  Select: \"Select\",\n  Slices: \"Slices\",\n  StructuredText: \"StructuredText\",\n  Text: \"Text\",\n  Timestamp: \"Timestamp\",\n  UID: \"UID\",\n  /**\n   * @deprecated - Renamed to `Integration`.\n   */\n  IntegrationFields: \"IntegrationFields\",\n  /**\n   * @deprecated - Legacy field type. Use `Number` instead.\n   */\n  Range: \"Range\",\n  /**\n   * @deprecated - Legacy field type. Do not use.\n   */\n  Separator: \"Separator\",\n  /**\n   * @deprecated - Legacy field type. Use `Slices` instead.\n   */\n  LegacySlices: \"Choice\"\n};\nexport {\n  CustomTypeModelFieldType\n};\n//# sourceMappingURL=types.js.map\n","const CustomTypeModelSliceType = {\n  Slice: \"Slice\",\n  SharedSlice: \"SharedSlice\"\n};\nexport {\n  CustomTypeModelSliceType\n};\n//# sourceMappingURL=sliceZone.js.map\n","const isNonNullish = (input) => {\n  return input != null;\n};\nconst isNonEmptyArray = (input) => {\n  return !!input.length;\n};\nconst richText = (field) => {\n  if (!isNonNullish(field)) {\n    return false;\n  } else if (field.length === 1 && \"text\" in field[0]) {\n    return !!field[0].text;\n  } else {\n    return !!field.length;\n  }\n};\nconst title = richText;\nconst imageThumbnail = (thumbnail) => {\n  return isNonNullish(thumbnail) && !!thumbnail.url;\n};\nconst image = imageThumbnail;\nconst link = (field) => {\n  return isNonNullish(field) && (\"id\" in field || \"url\" in field);\n};\nconst linkToMedia = link;\nconst contentRelationship = link;\nconst date = isNonNullish;\nconst timestamp = isNonNullish;\nconst color = isNonNullish;\nconst number = isNonNullish;\nconst keyText = (field) => {\n  return isNonNullish(keyText) && !!field;\n};\nconst select = isNonNullish;\nconst embed = (field) => {\n  return isNonNullish(field) && !!field.embed_url;\n};\nconst geoPoint = (field) => {\n  return isNonNullish(field) && \"longitude\" in field;\n};\nconst integrationField = isNonNullish;\nconst integrationFields = integrationField;\nconst group = (group2) => {\n  return isNonNullish(group2) && isNonEmptyArray(group2);\n};\nconst sliceZone = (slices) => {\n  return isNonNullish(slices) && isNonEmptyArray(slices);\n};\nexport {\n  color,\n  contentRelationship,\n  date,\n  embed,\n  geoPoint,\n  group,\n  image,\n  imageThumbnail,\n  integrationField,\n  integrationFields,\n  keyText,\n  link,\n  linkToMedia,\n  number,\n  richText,\n  select,\n  sliceZone,\n  timestamp,\n  title\n};\n//# sourceMappingURL=isFilled.js.map\n","const matchHtmlRegExp = /[\"'&<>]/;\nconst escapeHTML = (string) => {\n  const str = \"\" + string;\n  const match = matchHtmlRegExp.exec(str);\n  if (!match) {\n    return str;\n  }\n  let escape;\n  let html = \"\";\n  let index = 0;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escape;\n  }\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n};\nexport {\n  escapeHTML\n};\n//# sourceMappingURL=escapeHTML.js.map\n","import { LinkType } from \"../types/value/link.js\";\nimport { asLink } from \"../helpers/asLink.js\";\nimport { escapeHTML } from \"./escapeHTML.js\";\nconst formatAttributes = (node, attributes) => {\n  const _attributes = { ...attributes };\n  if (\"data\" in node && \"label\" in node.data && node.data.label) {\n    _attributes.class = _attributes.class ? `${_attributes.class} ${node.data.label}` : node.data.label;\n  }\n  const result = [];\n  for (const key in _attributes) {\n    const value = _attributes[key];\n    if (value) {\n      if (typeof value === \"boolean\") {\n        result.push(key);\n      } else {\n        result.push(`${key}=\"${escapeHTML(value)}\"`);\n      }\n    }\n  }\n  if (result.length) {\n    result.unshift(\"\");\n  }\n  return result.join(\" \");\n};\nconst getGeneralAttributes = (serializerOrShorthand) => {\n  return serializerOrShorthand && typeof serializerOrShorthand !== \"function\" ? serializerOrShorthand : {};\n};\nconst serializeStandardTag = (tag, serializerOrShorthand) => {\n  const generalAttributes = getGeneralAttributes(serializerOrShorthand);\n  return ({ node, children }) => {\n    return `<${tag}${formatAttributes(node, generalAttributes)}>${children}</${tag}>`;\n  };\n};\nconst serializePreFormatted = (serializerOrShorthand) => {\n  const generalAttributes = getGeneralAttributes(serializerOrShorthand);\n  return ({ node }) => {\n    return `<pre${formatAttributes(node, generalAttributes)}>${escapeHTML(node.text)}</pre>`;\n  };\n};\nconst serializeImage = (linkResolver, serializerOrShorthand) => {\n  const generalAttributes = getGeneralAttributes(serializerOrShorthand);\n  return ({ node }) => {\n    const attributes = {\n      ...generalAttributes,\n      src: node.url,\n      alt: node.alt,\n      copyright: node.copyright\n    };\n    let imageTag = `<img${formatAttributes(node, attributes)} />`;\n    if (node.linkTo) {\n      imageTag = serializeHyperlink(linkResolver)({\n        type: \"hyperlink\",\n        node: {\n          type: \"hyperlink\",\n          data: node.linkTo,\n          start: 0,\n          end: 0\n        },\n        text: \"\",\n        children: imageTag,\n        key: \"\"\n      });\n    }\n    return `<p class=\"block-img\">${imageTag}</p>`;\n  };\n};\nconst serializeEmbed = (serializerOrShorthand) => {\n  const generalAttributes = getGeneralAttributes(serializerOrShorthand);\n  return ({ node }) => {\n    const attributes = {\n      ...generalAttributes,\n      [\"data-oembed\"]: node.oembed.embed_url,\n      [\"data-oembed-type\"]: node.oembed.type,\n      [\"data-oembed-provider\"]: node.oembed.provider_name\n    };\n    return `<div${formatAttributes(node, attributes)}>${node.oembed.html}</div>`;\n  };\n};\nconst serializeHyperlink = (linkResolver, serializerOrShorthand) => {\n  const generalAttributes = getGeneralAttributes(serializerOrShorthand);\n  return ({ node, children }) => {\n    const attributes = {\n      ...generalAttributes\n    };\n    if (node.data.link_type === LinkType.Web) {\n      attributes.href = node.data.url;\n      attributes.target = node.data.target;\n      attributes.rel = \"noopener noreferrer\";\n    } else if (node.data.link_type === LinkType.Document) {\n      attributes.href = asLink(node.data, { linkResolver });\n    } else if (node.data.link_type === LinkType.Media) {\n      attributes.href = node.data.url;\n    }\n    return `<a${formatAttributes(node, attributes)}>${children}</a>`;\n  };\n};\nconst serializeSpan = () => {\n  return ({ text }) => {\n    return text ? escapeHTML(text).replace(/\\n/g, \"<br />\") : \"\";\n  };\n};\nexport {\n  serializeEmbed,\n  serializeHyperlink,\n  serializeImage,\n  serializePreFormatted,\n  serializeSpan,\n  serializeStandardTag\n};\n//# sourceMappingURL=serializerHelpers.js.map\n","const RichTextNodeType = {\n  heading1: \"heading1\",\n  heading2: \"heading2\",\n  heading3: \"heading3\",\n  heading4: \"heading4\",\n  heading5: \"heading5\",\n  heading6: \"heading6\",\n  paragraph: \"paragraph\",\n  preformatted: \"preformatted\",\n  strong: \"strong\",\n  em: \"em\",\n  listItem: \"list-item\",\n  oListItem: \"o-list-item\",\n  list: \"group-list-item\",\n  oList: \"group-o-list-item\",\n  image: \"image\",\n  embed: \"embed\",\n  hyperlink: \"hyperlink\",\n  label: \"label\",\n  span: \"span\"\n};\nexport {\n  RichTextNodeType\n};\n//# sourceMappingURL=richText.js.map\n","import { RichTextNodeType } from \"../types/value/richText.js\";\nconst uuid = () => {\n  return (++uuid.i).toString();\n};\nuuid.i = 0;\nconst asTree = (nodes) => {\n  const preparedNodes = prepareNodes(nodes);\n  const children = [];\n  for (let i = 0; i < preparedNodes.length; i++) {\n    children.push(nodeToTreeNode(preparedNodes[i]));\n  }\n  return {\n    key: uuid(),\n    children\n  };\n};\nconst createTreeNode = (node, children = []) => {\n  return {\n    key: uuid(),\n    type: node.type,\n    text: \"text\" in node ? node.text : void 0,\n    node,\n    children\n  };\n};\nconst createTextTreeNode = (text) => {\n  return createTreeNode({\n    type: RichTextNodeType.span,\n    text,\n    spans: []\n  });\n};\nconst prepareNodes = (nodes) => {\n  const mutNodes = nodes.slice(0);\n  for (let i = 0; i < mutNodes.length; i++) {\n    const node = mutNodes[i];\n    if (node.type === RichTextNodeType.listItem || node.type === RichTextNodeType.oListItem) {\n      const items = [\n        node\n      ];\n      while (mutNodes[i + 1] && mutNodes[i + 1].type === node.type) {\n        items.push(mutNodes[i + 1]);\n        mutNodes.splice(i, 1);\n      }\n      if (node.type === RichTextNodeType.listItem) {\n        mutNodes[i] = {\n          type: RichTextNodeType.list,\n          items\n        };\n      } else {\n        mutNodes[i] = {\n          type: RichTextNodeType.oList,\n          items\n        };\n      }\n    }\n  }\n  return mutNodes;\n};\nconst nodeToTreeNode = (node) => {\n  if (\"text\" in node) {\n    return createTreeNode(node, textNodeSpansToTreeNodeChildren(node.spans, node));\n  }\n  if (\"items\" in node) {\n    const children = [];\n    for (let i = 0; i < node.items.length; i++) {\n      children.push(nodeToTreeNode(node.items[i]));\n    }\n    return createTreeNode(node, children);\n  }\n  return createTreeNode(node);\n};\nconst textNodeSpansToTreeNodeChildren = (spans, node, parentSpan) => {\n  if (!spans.length) {\n    return [createTextTreeNode(node.text)];\n  }\n  const mutSpans = spans.slice(0);\n  mutSpans.sort((a, b) => a.start - b.start || b.end - a.end);\n  const children = [];\n  for (let i = 0; i < mutSpans.length; i++) {\n    const span = mutSpans[i];\n    const parentSpanStart = parentSpan && parentSpan.start || 0;\n    const spanStart = span.start - parentSpanStart;\n    const spanEnd = span.end - parentSpanStart;\n    const text = node.text.slice(spanStart, spanEnd);\n    const childSpans = [];\n    for (let j = i; j < mutSpans.length; j++) {\n      const siblingSpan = mutSpans[j];\n      if (siblingSpan !== span) {\n        if (siblingSpan.start >= span.start && siblingSpan.end <= span.end) {\n          childSpans.push(siblingSpan);\n          mutSpans.splice(j, 1);\n          j--;\n        } else if (siblingSpan.start < span.end && siblingSpan.end > span.start) {\n          childSpans.push({\n            ...siblingSpan,\n            end: span.end\n          });\n          mutSpans[j] = {\n            ...siblingSpan,\n            start: span.end\n          };\n        }\n      }\n    }\n    if (i === 0 && spanStart > 0) {\n      children.push(createTextTreeNode(node.text.slice(0, spanStart)));\n    }\n    const spanWithText = { ...span, text };\n    children.push(createTreeNode(spanWithText, textNodeSpansToTreeNodeChildren(childSpans, {\n      ...node,\n      text\n    }, span)));\n    if (spanEnd < node.text.length) {\n      children.push(createTextTreeNode(node.text.slice(spanEnd, mutSpans[i + 1] ? mutSpans[i + 1].start - parentSpanStart : void 0)));\n    }\n  }\n  return children;\n};\nexport {\n  asTree\n};\n//# sourceMappingURL=asTree.js.map\n","import { asTree } from \"./asTree.js\";\nconst serialize = (richTextField, serializer) => {\n  return serializeTreeNodes(asTree(richTextField).children, serializer);\n};\nconst serializeTreeNodes = (nodes, serializer) => {\n  const serializedTreeNodes = [];\n  for (let i = 0; i < nodes.length; i++) {\n    const treeNode = nodes[i];\n    const serializedTreeNode = serializer(treeNode.type, treeNode.node, treeNode.text, serializeTreeNodes(treeNode.children, serializer), treeNode.key);\n    if (serializedTreeNode != null) {\n      serializedTreeNodes.push(serializedTreeNode);\n    }\n  }\n  return serializedTreeNodes;\n};\nexport {\n  serialize\n};\n//# sourceMappingURL=serialize.js.map\n","import { RichTextNodeType } from \"../types/value/richText.js\";\nconst RichTextReversedNodeType = {\n  [RichTextNodeType.listItem]: \"listItem\",\n  [RichTextNodeType.oListItem]: \"oListItem\",\n  [RichTextNodeType.list]: \"list\",\n  [RichTextNodeType.oList]: \"oList\"\n};\nexport {\n  RichTextReversedNodeType\n};\n//# sourceMappingURL=types.js.map\n","import { serializeStandardTag, serializePreFormatted, serializeImage, serializeEmbed, serializeHyperlink, serializeSpan } from \"../lib/serializerHelpers.js\";\nimport { serialize } from \"../richtext/serialize.js\";\nimport { wrapMapSerializer } from \"../richtext/wrapMapSerializer.js\";\nimport { composeSerializers } from \"../richtext/composeSerializers.js\";\nconst createHTMLRichTextSerializer = (linkResolver, serializer) => {\n  const useSerializerOrDefault = (nodeSerializerOrShorthand, defaultWithShorthand) => {\n    if (typeof nodeSerializerOrShorthand === \"function\") {\n      return (payload) => {\n        return nodeSerializerOrShorthand(payload) || defaultWithShorthand(payload);\n      };\n    }\n    return defaultWithShorthand;\n  };\n  const mapSerializer = {\n    heading1: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading1, serializeStandardTag(\"h1\", serializer == null ? void 0 : serializer.heading1)),\n    heading2: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading2, serializeStandardTag(\"h2\", serializer == null ? void 0 : serializer.heading2)),\n    heading3: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading3, serializeStandardTag(\"h3\", serializer == null ? void 0 : serializer.heading3)),\n    heading4: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading4, serializeStandardTag(\"h4\", serializer == null ? void 0 : serializer.heading4)),\n    heading5: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading5, serializeStandardTag(\"h5\", serializer == null ? void 0 : serializer.heading5)),\n    heading6: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading6, serializeStandardTag(\"h6\", serializer == null ? void 0 : serializer.heading6)),\n    paragraph: useSerializerOrDefault(serializer == null ? void 0 : serializer.paragraph, serializeStandardTag(\"p\", serializer == null ? void 0 : serializer.paragraph)),\n    preformatted: useSerializerOrDefault(serializer == null ? void 0 : serializer.preformatted, serializePreFormatted(serializer == null ? void 0 : serializer.preformatted)),\n    strong: useSerializerOrDefault(serializer == null ? void 0 : serializer.strong, serializeStandardTag(\"strong\", serializer == null ? void 0 : serializer.strong)),\n    em: useSerializerOrDefault(serializer == null ? void 0 : serializer.em, serializeStandardTag(\"em\", serializer == null ? void 0 : serializer.em)),\n    listItem: useSerializerOrDefault(serializer == null ? void 0 : serializer.listItem, serializeStandardTag(\"li\", serializer == null ? void 0 : serializer.listItem)),\n    oListItem: useSerializerOrDefault(serializer == null ? void 0 : serializer.oListItem, serializeStandardTag(\"li\", serializer == null ? void 0 : serializer.oListItem)),\n    list: useSerializerOrDefault(serializer == null ? void 0 : serializer.list, serializeStandardTag(\"ul\", serializer == null ? void 0 : serializer.list)),\n    oList: useSerializerOrDefault(serializer == null ? void 0 : serializer.oList, serializeStandardTag(\"ol\", serializer == null ? void 0 : serializer.oList)),\n    image: useSerializerOrDefault(serializer == null ? void 0 : serializer.image, serializeImage(linkResolver, serializer == null ? void 0 : serializer.image)),\n    embed: useSerializerOrDefault(serializer == null ? void 0 : serializer.embed, serializeEmbed(serializer == null ? void 0 : serializer.embed)),\n    hyperlink: useSerializerOrDefault(serializer == null ? void 0 : serializer.hyperlink, serializeHyperlink(linkResolver, serializer == null ? void 0 : serializer.hyperlink)),\n    label: useSerializerOrDefault(serializer == null ? void 0 : serializer.label, serializeStandardTag(\"span\", serializer == null ? void 0 : serializer.label)),\n    span: useSerializerOrDefault(serializer == null ? void 0 : serializer.span, serializeSpan())\n  };\n  return wrapMapSerializerWithStringChildren(mapSerializer);\n};\nconst wrapMapSerializerWithStringChildren = (mapSerializer) => {\n  const modifiedMapSerializer = {};\n  for (const tag in mapSerializer) {\n    const tagSerializer = mapSerializer[tag];\n    if (tagSerializer) {\n      modifiedMapSerializer[tag] = (payload) => {\n        return tagSerializer({\n          ...payload,\n          // @ts-expect-error - merging blockSerializer types causes TS to bail to a never type\n          children: payload.children.join(\"\")\n        });\n      };\n    }\n  }\n  return wrapMapSerializer(modifiedMapSerializer);\n};\nconst asHTML = (richTextField, ...configObjectOrTuple) => {\n  if (richTextField) {\n    const [configObjectOrLinkResolver, maybeSerializer] = configObjectOrTuple;\n    let config;\n    if (typeof configObjectOrLinkResolver === \"function\" || configObjectOrLinkResolver == null) {\n      config = {\n        linkResolver: configObjectOrLinkResolver,\n        serializer: maybeSerializer\n      };\n    } else {\n      config = { ...configObjectOrLinkResolver };\n    }\n    let serializer;\n    if (config.serializer) {\n      if (typeof config.serializer === \"function\") {\n        serializer = composeSerializers((type, node, text, children, key) => (\n          // TypeScript doesn't narrow the type correctly here since it is now in a callback function, so we have to cast it here.\n          config.serializer(type, node, text, children.join(\"\"), key)\n        ), createHTMLRichTextSerializer(config.linkResolver));\n      } else {\n        serializer = createHTMLRichTextSerializer(config.linkResolver, config.serializer);\n      }\n    } else {\n      serializer = createHTMLRichTextSerializer(config.linkResolver);\n    }\n    return serialize(richTextField, serializer).join(\"\");\n  } else {\n    return null;\n  }\n};\nexport {\n  asHTML\n};\n//# sourceMappingURL=asHTML.js.map\n","import { RichTextReversedNodeType } from \"./types.js\";\nconst wrapMapSerializer = (mapSerializer) => {\n  return (type, node, text, children, key) => {\n    const tagSerializer = mapSerializer[RichTextReversedNodeType[type] || type];\n    if (tagSerializer) {\n      return tagSerializer({\n        // @ts-expect-error cannot type check here\n        type,\n        // @ts-expect-error cannot type check here\n        node,\n        // @ts-expect-error cannot type check here\n        text,\n        // @ts-expect-error cannot type check here\n        children,\n        // @ts-expect-error cannot type check here\n        key\n      });\n    }\n  };\n};\nexport {\n  wrapMapSerializer\n};\n//# sourceMappingURL=wrapMapSerializer.js.map\n","const camelCaseToParamCase = (input) => {\n  return input.replace(/[A-Z]/g, (match) => {\n    return `-${match.toLowerCase()}`;\n  });\n};\nconst buildURL = (url, params) => {\n  const instance = new URL(url);\n  for (const camelCasedParamKey in params) {\n    const paramKey = camelCaseToParamCase(camelCasedParamKey);\n    const paramValue = params[camelCasedParamKey];\n    if (paramValue === void 0) {\n      instance.searchParams.delete(paramKey);\n    } else if (Array.isArray(paramValue)) {\n      instance.searchParams.set(paramKey, paramValue.join(\",\"));\n    } else {\n      instance.searchParams.set(paramKey, `${paramValue}`);\n    }\n  }\n  const s = instance.searchParams.get(\"s\");\n  if (s) {\n    instance.searchParams.delete(\"s\");\n    instance.searchParams.append(\"s\", s);\n  }\n  return instance.toString();\n};\n\nconst buildPixelDensitySrcSet = (url, { pixelDensities, ...params }) => {\n  return pixelDensities.map((dpr) => {\n    return `${buildURL(url, { ...params, dpr })} ${dpr}x`;\n  }).join(\", \");\n};\n\nconst buildWidthSrcSet = (url, { widths, ...params }) => {\n  return widths.map((width) => {\n    return `${buildURL(url, { ...params, w: void 0, width })} ${width}w`;\n  }).join(\", \");\n};\n\nclass Client {\n  /**\n   * Creates a new `Client` instance for an Imgix domain.\n   *\n   * @param options - Options to instantiate a new client.\n   *\n   * @returns A `Client` instance for the given Imgix domain.\n   */\n  constructor(options) {\n    this.baseURL = options.baseURL;\n  }\n  /**\n   * Builds a URL to an Imgix image with Imgix URL API parameters for the\n   * client's base URL.\n   *\n   * @example\n   *\n   * ```ts\n   * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n   * const url = client.buildURLForPath(\"/image.png\", { width: 400 });\n   * // => https://example.imgix.net/image.png?width=400\n   * ```\n   *\n   * @example\n   *\n   * ```ts\n   * const client = new Client({\n   * \tbaseURL: \"https://example.imgix.net/folder\",\n   * });\n   * const url = client.buildURLForPath(\"./image.png\", { width: 400 });\n   * // => https://example.imgix.net/folder/image.png?width=400\n   * ```\n   *\n   * @param path - Path to the image relative to the client's base URL.\n   * @param params - An object of Imgix URL API parameters.\n   *\n   * @returns The full absolute URL to the image with the given Imgix URL API\n   *   parameters applied.\n   */\n  buildURLForPath(path, params = {}) {\n    return buildURL(`${new URL(path, this.baseURL)}`, params);\n  }\n  /**\n   * Builds an `<img>` `srcset` attribute value for a given set of widths for\n   * the client's base URL. It can also optinally apply Imgix URL API parameters\n   * to the URLs.\n   *\n   * The `width` URL parameter will be applied for each `srcset` entry. If a\n   * `width` or `w` parameter is provided to the `params` parameter, it will be\n   * ignored.\n   *\n   * @example\n   *\n   * ```ts\n   * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n   * const srcset = client.buildWidthSrcSetForPath(\"/image.png\", {\n   * \twidths: [400, 800, 1600],\n   * });\n   * // => https://example.imgix.net/image.png?width=400 400w,\n   * //    https://example.imgix.net/image.png?width=800 800w,\n   * //    https://example.imgix.net/image.png?width=1600 1600w\n   * ```\n   *\n   * @example\n   *\n   * ```ts\n   * const client = new Client({\n   * \tbaseURL: \"https://example.imgix.net\",\n   * });\n   * const srcset = client.buildWidthSrcSetForPath(\"/image.png\", {\n   * \twidths: [400, 800, 1600],\n   * \tsat: -100,\n   * });\n   * // => https://example.imgix.net/image.png?width=400&sat=-100 400w,\n   * //    https://example.imgix.net/image.png?width=800&sat=-100 800w,\n   * //    https://example.imgix.net/image.png?width=1600&sat=-100 1600w\n   * ```\n   *\n   * @param path - Path to the image relative to the client's base URL.\n   * @param params - An object of Imgix URL API parameters. The `widths`\n   *   parameter defines the resulting `srcset` widths.\n   *\n   * @returns A `srcset` attribute value for `url` with the given Imgix URL API\n   *   parameters applied.\n   */\n  buildWidthSrcSetForPath(path, params) {\n    return buildWidthSrcSet(`${new URL(path, this.baseURL)}`, params);\n  }\n  /**\n   * Builds an `<img>` `srcset` attribute value for a given set of pixel\n   * densities for the client's base URL. It can also optinally apply Imgix URL\n   * API parameters to the URLs.\n   *\n   * The `dpr` URL parameter will be applied for each `srcset` entry. If a `dpr`\n   * parameter is provided to the `params` parameter, it will be ignored.\n   *\n   * @example\n   *\n   * ```ts\n   * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n   * const srcset = client.buildPixelDensitySrcSetForPath(\"/image.png\", {\n   * \tpixelDensities: [1, 2, 3],\n   * });\n   * // => https://example.imgix.net/image.png?dpr=1 1x,\n   * //    https://example.imgix.net/image.png?dpr=2 2x,\n   * //    https://example.imgix.net/image.png?dpr=3 3x\n   * ```\n   *\n   * @example\n   *\n   * ```ts\n   * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n   * const srcset = client.buildPixelDensitySrcSetForPath(\"/image.png\", {\n   * \tpixelDensities: [1, 2, 3],\n   * \tsat: -100,\n   * });\n   * // => https://example.imgix.net/image.png?dpr=1&sat=-100 1x,\n   * //    https://example.imgix.net/image.png?dpr=2&sat=-100 2x,\n   * //    https://example.imgix.net/image.png?dpr=3&sat=-100 3x\n   * ```\n   *\n   * @param path - Path to the image relative to the client's base URL.\n   * @param params - An object of Imgix URL API parameters. The `pixelDensities`\n   *   parameter defines the resulting `srcset` widths.\n   *\n   * @returns A `srcset` attribute value for `url` with the given Imgix URL API\n   *   parameters applied.\n   */\n  buildPixelDensitySrcSetForPath(path, params) {\n    return buildPixelDensitySrcSet(`${new URL(path, this.baseURL)}`, params);\n  }\n}\n\nexport { Client, buildPixelDensitySrcSet, buildURL, buildWidthSrcSet };\n//# sourceMappingURL=index.mjs.map\n","import type { ImgixURLParams } from \"imgix-url-builder\";\n\nexport const PUBLIC_MODELS_FILE_NAME_SEED_CACHE_KEY =\n\t\"publicModelsFileNameSeed\";\n\n/**\n * Default Imgix parameters applied to all images.\n */\nexport const DEFAULT_IMGIX_PARAMS: ImgixURLParams = {\n\tfit: \"max\",\n};\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\",\n        },\n    },\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n//# sourceMappingURL=index.js.map","import { lowerCase } from \"lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function pascalCaseTransform(input, index) {\n    var firstChar = input.charAt(0);\n    var lowerChars = input.substr(1).toLowerCase();\n    if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n        return \"_\" + firstChar + lowerChars;\n    }\n    return \"\" + firstChar.toUpperCase() + lowerChars;\n}\nexport function pascalCaseTransformMerge(input) {\n    return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\nexport function pascalCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \"\", transform: pascalCaseTransform }, options));\n}\n//# sourceMappingURL=index.js.map","import {\n\tpascalCase as basePascalCase,\n\tpascalCaseTransformMerge,\n} from \"pascal-case\";\n\n/**\n * Converts a string to a Pascal cased string.\n *\n * @param input - String to convert into a Pascal cased string.\n *\n * @returns Pascal cased string version of `input`.\n */\nexport const pascalCase = (...input: (string | undefined)[]): string => {\n\treturn basePascalCase(input.filter(Boolean).join(\" \"), {\n\t\ttransform: pascalCaseTransformMerge,\n\t});\n};\n","export const uuid = (): string => {\n\treturn (++uuid.i).toString();\n};\nuuid.i = 0;\n","import {\n\tAnyRegularField,\n\tCustomTypeModel,\n\tCustomTypeModelField,\n\tCustomTypeModelFieldType,\n\tCustomTypeModelGroupField,\n\tCustomTypeModelImageField,\n\tCustomTypeModelSlice,\n\tCustomTypeModelSliceType,\n\tCustomTypeModelSliceZoneField,\n\tGroupField,\n\tImageField,\n\tImageFieldImage,\n\tLinkField,\n\tPrismicDocument,\n\tRichTextField,\n\tSharedSlice,\n\tSharedSliceModel,\n\tSliceZone,\n\tasHTML,\n\tasLink,\n\tasText,\n\tisFilled,\n} from \"@prismicio/client\";\nimport { IUrlBuilderArgs, getImageData } from \"gatsby-plugin-image\";\nimport { ImgixURLParams, buildURL } from \"imgix-url-builder\";\n\nimport type {\n\tNormalizedDocument,\n\tPluginOptions,\n\tRepositoryConfig,\n} from \"../types\";\n\nimport { DEFAULT_IMGIX_PARAMS } from \"../constants\";\n\nimport { getDocument } from \"./getDocument\";\nimport { hasOwnProperty } from \"./hasOwnProperty\";\nimport { pascalCase } from \"./pascalCase\";\nimport { uuid } from \"./uuid\";\n\n// TODO: Consider changing the lazy-loading property design (currently using\n// getters) to only call the getter once (i.e. cache the result, like\n// memoization)\n\nconst defaultTransformFieldName = (fieldName: string): string => {\n\treturn fieldName.replace(/-/g, \"_\");\n};\n\nconst withDocumentProxy = <\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tTTarget extends Record<any, any>,\n>(\n\ttarget: TTarget,\n\trepositoryConfig: RepositoryConfig,\n): TTarget => {\n\treturn new Proxy(target, {\n\t\tget(target, prop, receiver) {\n\t\t\tif (prop === \"document\") {\n\t\t\t\tif (hasOwnProperty(target, \"id\") && typeof target.id === \"string\") {\n\t\t\t\t\treturn getDocument(target.id) || null;\n\t\t\t\t}\n\t\t\t} else if (prop === \"url\") {\n\t\t\t\tif (hasOwnProperty(target, \"id\") && typeof target.id === \"string\") {\n\t\t\t\t\tconst document = getDocument(target.id);\n\n\t\t\t\t\tif (document) {\n\t\t\t\t\t\treturn asLink(document.raw, {\n\t\t\t\t\t\t\tlinkResolver: repositoryConfig.linkResolver,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\t});\n};\n\ntype ImgixGatsbyImageDataUrlBuilderArgs = IUrlBuilderArgs<{\n\timageImgixParams?: ImgixURLParams;\n}>;\n\nconst imgixGatsbyImageDataUrlBuilder = (\n\targs: ImgixGatsbyImageDataUrlBuilderArgs,\n) => {\n\treturn buildURL(args.baseUrl, {\n\t\t...DEFAULT_IMGIX_PARAMS,\n\t\t...args.options.imageImgixParams,\n\t\tfm: args.format && args.format !== \"auto\" ? args.format : undefined,\n\t\tw: args.width,\n\t\th: args.height,\n\t});\n};\n\nconst normalizeImageField = (\n\timage: ImageFieldImage,\n\tpluginOptions: PluginOptions,\n) => {\n\treturn {\n\t\t...image,\n\t\tget url() {\n\t\t\tif (isFilled.image(image)) {\n\t\t\t\treturn buildURL(image.url, {\n\t\t\t\t\t...DEFAULT_IMGIX_PARAMS,\n\t\t\t\t\t...pluginOptions.imageImgixParams,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tget gatsbyImageData() {\n\t\t\tif (isFilled.image(image)) {\n\t\t\t\treturn getImageData({\n\t\t\t\t\tbaseUrl: image.url,\n\t\t\t\t\tsourceWidth: image.dimensions.width,\n\t\t\t\t\tsourceHeight: image.dimensions.height,\n\t\t\t\t\turlBuilder: imgixGatsbyImageDataUrlBuilder,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\timageImgixParams: pluginOptions.imageImgixParams,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tget localFile() {\n\t\t\tif (isFilled.image(image)) {\n\t\t\t\treturn {\n\t\t\t\t\tpublicURL: image.url,\n\t\t\t\t\tchildImageSharp: {\n\t\t\t\t\t\tget gatsbyImageData() {\n\t\t\t\t\t\t\treturn getImageData({\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\tbaseUrl: image.url!,\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\tsourceWidth: image.dimensions!.width,\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\tsourceHeight: image.dimensions!.height,\n\t\t\t\t\t\t\t\turlBuilder: imgixGatsbyImageDataUrlBuilder,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\timageImgixParams: pluginOptions.imageImgixParams,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t};\n};\n\nconst normalizeField = async (\n\tlooseModel: CustomTypeModelField | undefined,\n\tlooseValue: AnyRegularField | GroupField | SliceZone,\n\tpath: string[],\n\tsharedSliceModels: SharedSliceModel[],\n\trepositoryConfig: RepositoryConfig,\n\tpluginOptions: PluginOptions,\n) => {\n\tswitch (looseModel?.type) {\n\t\tcase CustomTypeModelFieldType.Slices: {\n\t\t\tconst value = looseValue as SliceZone;\n\n\t\t\tif (isFilled.sliceZone(value)) {\n\t\t\t\treturn await Promise.all(\n\t\t\t\t\tvalue.map(async (slice) => {\n\t\t\t\t\t\tconst model = looseModel as CustomTypeModelSliceZoneField;\n\t\t\t\t\t\tconst sliceModel = model.config?.choices?.[slice.slice_type] as\n\t\t\t\t\t\t\t| CustomTypeModelSlice\n\t\t\t\t\t\t\t| SharedSliceModel\n\t\t\t\t\t\t\t| undefined;\n\n\t\t\t\t\t\tif (sliceModel) {\n\t\t\t\t\t\t\tconst result: Omit<typeof slice, \"primary\" | \"items\"> & {\n\t\t\t\t\t\t\t\t__typename: string;\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tprimary: Record<string, unknown>;\n\t\t\t\t\t\t\t\titems: Record<string, unknown>[];\n\t\t\t\t\t\t\t} = {\n\t\t\t\t\t\t\t\t...slice,\n\t\t\t\t\t\t\t\tid: uuid(),\n\t\t\t\t\t\t\t\t__typename: pascalCase(\n\t\t\t\t\t\t\t\t\t\"Prismic\",\n\t\t\t\t\t\t\t\t\tpluginOptions.typePrefix,\n\t\t\t\t\t\t\t\t\t...path,\n\t\t\t\t\t\t\t\t\tslice.slice_type,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (sliceModel.type === CustomTypeModelSliceType.Slice) {\n\t\t\t\t\t\t\t\tresult.primary = await normalizeFields(\n\t\t\t\t\t\t\t\t\tslice.primary,\n\t\t\t\t\t\t\t\t\tsliceModel[\"non-repeat\"] || {},\n\t\t\t\t\t\t\t\t\t[...path, slice.slice_type, \"primary\"],\n\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tresult.items = await Promise.all(\n\t\t\t\t\t\t\t\t\tslice.items.map(async (item) => {\n\t\t\t\t\t\t\t\t\t\treturn await normalizeFields(\n\t\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\t\tsliceModel.repeat || {},\n\t\t\t\t\t\t\t\t\t\t\t[...path, slice.slice_type, \"item\"],\n\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tsliceModel.type === CustomTypeModelSliceType.SharedSlice\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst typedSlice = slice as SharedSlice;\n\t\t\t\t\t\t\t\tconst sharedSliceModel = sharedSliceModels.find(\n\t\t\t\t\t\t\t\t\t(m) => m.id === slice.slice_type,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst variationModel = sharedSliceModel?.variations.find(\n\t\t\t\t\t\t\t\t\t(m) => m.id === typedSlice.variation,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (sharedSliceModel && variationModel) {\n\t\t\t\t\t\t\t\t\tresult.__typename = pascalCase(\n\t\t\t\t\t\t\t\t\t\t\"Prismic\",\n\t\t\t\t\t\t\t\t\t\tpluginOptions.typePrefix,\n\t\t\t\t\t\t\t\t\t\tsharedSliceModel.id,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tresult.primary = await normalizeFields(\n\t\t\t\t\t\t\t\t\t\tslice.primary,\n\t\t\t\t\t\t\t\t\t\tvariationModel.primary || {},\n\t\t\t\t\t\t\t\t\t\t[...path, slice.slice_type, \"primary\"],\n\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tresult.items = await Promise.all(\n\t\t\t\t\t\t\t\t\t\tslice.items.map(async (item) => {\n\t\t\t\t\t\t\t\t\t\t\treturn await normalizeFields(\n\t\t\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\t\t\tvariationModel.items || {},\n\t\t\t\t\t\t\t\t\t\t\t\t[...path, slice.slice_type, \"item\"],\n\t\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn slice;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.Group: {\n\t\t\tconst value = looseValue as GroupField;\n\n\t\t\tif (isFilled.group(value)) {\n\t\t\t\treturn await Promise.all(\n\t\t\t\t\tvalue.map(async (item) => {\n\t\t\t\t\t\tconst model = looseModel as CustomTypeModelGroupField;\n\n\t\t\t\t\t\treturn await normalizeFields(\n\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\tmodel.config?.fields || {},\n\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t);\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.Link: {\n\t\t\tconst value = looseValue as LinkField;\n\n\t\t\tconst result: Omit<typeof value, \"url\"> & {\n\t\t\t\tid?: string;\n\t\t\t\turl: string | null;\n\t\t\t\ttarget?: string | null;\n\t\t\t\traw: typeof value;\n\t\t\t\tdocument?: unknown;\n\t\t\t\tlocalFile: { publicURL: string } | null;\n\t\t\t} = {\n\t\t\t\t...value,\n\t\t\t\ttarget:\n\t\t\t\t\t\"target\" in value && value.target ? value.target || null : undefined,\n\t\t\t\turl:\n\t\t\t\t\tasLink(value, { linkResolver: repositoryConfig.linkResolver }) ??\n\t\t\t\t\tnull,\n\t\t\t\traw: value,\n\t\t\t\tlocalFile: null,\n\t\t\t};\n\n\t\t\tif (value.link_type === \"Media\" && \"url\" in value && value.url) {\n\t\t\t\tresult.localFile = {\n\t\t\t\t\tpublicURL: value.url,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn withDocumentProxy(result, repositoryConfig);\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.StructuredText: {\n\t\t\tconst value = looseValue as RichTextField;\n\n\t\t\treturn {\n\t\t\t\tget html() {\n\t\t\t\t\tif (isFilled.richText(value)) {\n\t\t\t\t\t\treturn asHTML(value, {\n\t\t\t\t\t\t\tlinkResolver: repositoryConfig.linkResolver,\n\t\t\t\t\t\t\tserializer: repositoryConfig.htmlSerializer,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget text() {\n\t\t\t\t\tif (isFilled.richText(value)) {\n\t\t\t\t\t\treturn asText(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trichText: value,\n\t\t\t\traw: value,\n\t\t\t};\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.Image: {\n\t\t\tconst value = looseValue as ImageField<string>;\n\n\t\t\tconst result = {\n\t\t\t\t...normalizeImageField(value, pluginOptions),\n\t\t\t\tget thumbnails() {\n\t\t\t\t\tconst model = looseModel as CustomTypeModelImageField;\n\t\t\t\t\tconst transformFieldName =\n\t\t\t\t\t\trepositoryConfig.transformFieldName || defaultTransformFieldName;\n\n\t\t\t\t\tif (model.config?.thumbnails) {\n\t\t\t\t\t\tconst thumbnails: Record<\n\t\t\t\t\t\t\tstring,\n\t\t\t\t\t\t\tReturnType<typeof normalizeImageField>\n\t\t\t\t\t\t> = {};\n\n\t\t\t\t\t\tfor (const thumbnailModel of model.config.thumbnails) {\n\t\t\t\t\t\t\tconst transformedThumbnailName = transformFieldName(\n\t\t\t\t\t\t\t\tthumbnailModel.name,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tthumbnails[transformedThumbnailName] = normalizeImageField(\n\t\t\t\t\t\t\t\tvalue[thumbnailModel.name],\n\t\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn thumbnails;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\n\t\t\treturn result;\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn looseValue;\n\t\t}\n\t}\n};\n\nconst normalizeFields = async (\n\tfields: Record<string, AnyRegularField | GroupField | SliceZone>,\n\tmodels: Record<string, CustomTypeModelField>,\n\tpath: string[],\n\tsharedSliceModels: SharedSliceModel[],\n\trepositoryConfig: RepositoryConfig,\n\tpluginOptions: PluginOptions,\n) => {\n\tconst result: Record<string, unknown> = {};\n\n\tconst fieldNames = Object.keys(models);\n\n\tawait Promise.all(\n\t\tfieldNames.map(async (fieldName) => {\n\t\t\tif (fieldName !== \"uid\") {\n\t\t\t\tconst transformFieldName =\n\t\t\t\t\trepositoryConfig.transformFieldName || defaultTransformFieldName;\n\t\t\t\tconst transformedFieldName = transformFieldName(fieldName);\n\n\t\t\t\tresult[transformedFieldName] = await normalizeField(\n\t\t\t\t\tmodels[fieldName],\n\t\t\t\t\tfields[fieldName],\n\t\t\t\t\t[...path, fieldName],\n\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\trepositoryConfig,\n\t\t\t\t\tpluginOptions,\n\t\t\t\t);\n\t\t\t}\n\t\t}),\n\t);\n\n\treturn result;\n};\n\nexport const normalizeDocument = async (\n\tdocument: PrismicDocument,\n\tmodel: CustomTypeModel,\n\tsharedSliceModels: SharedSliceModel[],\n\trepositoryConfig: RepositoryConfig,\n\tpluginOptions: PluginOptions,\n): Promise<NormalizedDocument> => {\n\tconst normalizedDocument = {\n\t\t...document,\n\t\t__typename: pascalCase(\"Prismic\", pluginOptions.typePrefix, model.id),\n\t\t_previewable: document.id,\n\t\tprismicId: document.id,\n\t\tid: uuid(),\n\t\turl:\n\t\t\tasLink(document, { linkResolver: repositoryConfig.linkResolver }) ?? null,\n\t\tdataRaw: document.data,\n\t\traw: document,\n\t\talternate_languages: document.alternate_languages.map(\n\t\t\t(alternateLanguage) => {\n\t\t\t\treturn withDocumentProxy(alternateLanguage, repositoryConfig);\n\t\t\t},\n\t\t),\n\t};\n\n\tif (Object.keys(document.data).length > 0) {\n\t\tconst fieldModels: CustomTypeModel[\"json\"][string] = Object.assign(\n\t\t\t{},\n\t\t\t...Object.values(model.json),\n\t\t);\n\n\t\tnormalizedDocument.data = await normalizeFields(\n\t\t\tdocument.data,\n\t\t\tfieldModels,\n\t\t\t[model.id, \"data\"],\n\t\t\tsharedSliceModels,\n\t\t\trepositoryConfig,\n\t\t\tpluginOptions,\n\t\t);\n\t}\n\n\treturn normalizedDocument;\n};\n","const composeSerializers = (...serializers) => {\n  return (...args) => {\n    for (let i = 0; i < serializers.length; i++) {\n      const serializer = serializers[i];\n      if (serializer) {\n        const res = serializer(...args);\n        if (res != null) {\n          return res;\n        }\n      }\n    }\n  };\n};\nexport {\n  composeSerializers\n};\n//# sourceMappingURL=composeSerializers.js.map\n","import { asText as asText$1 } from \"../richtext/asText.js\";\nconst asText = (richTextField, ...configObjectOrTuple) => {\n  if (richTextField) {\n    const [configObjectOrSeparator] = configObjectOrTuple;\n    let config;\n    if (typeof configObjectOrSeparator === \"string\") {\n      config = {\n        separator: configObjectOrSeparator\n      };\n    } else {\n      config = { ...configObjectOrSeparator };\n    }\n    return asText$1(richTextField, config.separator);\n  } else {\n    return null;\n  }\n};\nexport {\n  asText\n};\n//# sourceMappingURL=asText.js.map\n","const asText = (richTextField, separator = \" \") => {\n  let result = \"\";\n  for (let i = 0; i < richTextField.length; i++) {\n    if (\"text\" in richTextField[i]) {\n      result += (result ? separator : \"\") + richTextField[i].text;\n    }\n  }\n  return result;\n};\nexport {\n  asText\n};\n//# sourceMappingURL=asText.js.map\n","import {\n\tAnyRegularField,\n\tClient,\n\tCustomTypeModel,\n\tCustomTypeModelField,\n\tCustomTypeModelFieldType,\n\tCustomTypeModelGroupField,\n\tCustomTypeModelSlice,\n\tCustomTypeModelSliceType,\n\tCustomTypeModelSliceZoneField,\n\tGroupField,\n\tLinkField,\n\tPrismicDocument,\n\tSharedSlice,\n\tSharedSliceModel,\n\tSliceZone,\n} from \"@prismicio/client\";\n\nimport type { PluginOptions, RepositoryConfig } from \"../types\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nimport { normalizeDocument } from \"./normalizeDocument\";\n\nconst extractLinkedDocumentIDsFromField = async (\n\tlooseValue: AnyRegularField | GroupField | SliceZone,\n\tlooseModel: CustomTypeModelField,\n\tsharedSliceModels: SharedSliceModel[],\n): Promise<string[]> => {\n\tswitch (looseModel.type) {\n\t\tcase CustomTypeModelFieldType.Slices: {\n\t\t\tconst value = looseValue as SliceZone;\n\n\t\t\treturn (\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tvalue.map(async (slice) => {\n\t\t\t\t\t\tconst model = looseModel as CustomTypeModelSliceZoneField;\n\t\t\t\t\t\tconst sliceModel = model.config?.choices?.[slice.slice_type] as\n\t\t\t\t\t\t\t| CustomTypeModelSlice\n\t\t\t\t\t\t\t| SharedSliceModel\n\t\t\t\t\t\t\t| undefined;\n\n\t\t\t\t\t\tif (sliceModel) {\n\t\t\t\t\t\t\tif (sliceModel.type === CustomTypeModelSliceType.Slice) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tawait Promise.all([\n\t\t\t\t\t\t\t\t\t\textractLinkedDocumentIDsFromFields(\n\t\t\t\t\t\t\t\t\t\t\tslice.primary,\n\t\t\t\t\t\t\t\t\t\t\tsliceModel[\"non-repeat\"] || {},\n\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t...slice.items.map(async (item) => {\n\t\t\t\t\t\t\t\t\t\t\treturn extractLinkedDocumentIDsFromFields(\n\t\t\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\t\t\tsliceModel.repeat || {},\n\t\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t).flat();\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tsliceModel.type === CustomTypeModelSliceType.SharedSlice\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst typedSlice = slice as SharedSlice;\n\t\t\t\t\t\t\t\tconst variationModel = sharedSliceModels\n\t\t\t\t\t\t\t\t\t.find((m) => m.id === slice.slice_type)\n\t\t\t\t\t\t\t\t\t?.variations.find((m) => m.id === typedSlice.variation);\n\n\t\t\t\t\t\t\t\tif (variationModel) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\tawait Promise.all([\n\t\t\t\t\t\t\t\t\t\t\textractLinkedDocumentIDsFromFields(\n\t\t\t\t\t\t\t\t\t\t\t\tslice.primary,\n\t\t\t\t\t\t\t\t\t\t\t\tvariationModel.primary || {},\n\t\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t...slice.items.map(async (item) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn extractLinkedDocumentIDsFromFields(\n\t\t\t\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariationModel.items || {},\n\t\t\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t).flat();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t).flat();\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.Group: {\n\t\t\tconst value = looseValue as GroupField;\n\n\t\t\treturn (\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tvalue.map(async (item) => {\n\t\t\t\t\t\tconst model = looseModel as CustomTypeModelGroupField;\n\n\t\t\t\t\t\treturn await extractLinkedDocumentIDsFromFields(\n\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\tmodel.config?.fields || {},\n\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t);\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t).flat();\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.Link: {\n\t\t\tconst value = looseValue as LinkField;\n\n\t\t\tif (\"id\" in value && !value.isBroken) {\n\t\t\t\treturn [value.id];\n\t\t\t}\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn [];\n\t\t}\n\t}\n};\n\nconst extractLinkedDocumentIDsFromFields = async (\n\tfields: Record<string, AnyRegularField | GroupField | SliceZone>,\n\tmodels: Record<string, CustomTypeModelField>,\n\tsharedSliceModels: SharedSliceModel[],\n): Promise<string[]> => {\n\tconst fieldNames = Object.keys(models);\n\n\treturn (\n\t\tawait Promise.all(\n\t\t\tfieldNames.map(async (fieldName) => {\n\t\t\t\treturn extractLinkedDocumentIDsFromField(\n\t\t\t\t\tfields[fieldName],\n\t\t\t\t\tmodels[fieldName],\n\t\t\t\t\tsharedSliceModels,\n\t\t\t\t);\n\t\t\t}),\n\t\t)\n\t).flat();\n};\n\nconst extractLinkedDocumentIDs = async (\n\tdocument: PrismicDocument,\n\tcustomTypeModels: CustomTypeModel[],\n\tsharedSliceModels: SharedSliceModel[],\n): Promise<string[]> => {\n\tconst model = customTypeModels.find(\n\t\t(customTypeModel) => customTypeModel.id === document.type,\n\t);\n\n\tif (model) {\n\t\tconst fieldModels: CustomTypeModel[\"json\"][string] = Object.assign(\n\t\t\t{},\n\t\t\t...Object.values(model.json),\n\t\t);\n\n\t\tconst linkedIDs = await extractLinkedDocumentIDsFromFields(\n\t\t\tdocument.data,\n\t\t\tfieldModels,\n\t\t\tsharedSliceModels,\n\t\t);\n\n\t\tconst alternateLanguageIDs = document.alternate_languages.map(\n\t\t\t(alternateLanguage) => {\n\t\t\t\treturn alternateLanguage.id;\n\t\t\t},\n\t\t);\n\t\tlinkedIDs.push(...alternateLanguageIDs);\n\n\t\treturn linkedIDs;\n\t} else {\n\t\treturn [];\n\t}\n};\n\nexport const fetchLinkedDocuments = async (\n\tdocuments: PrismicDocument[],\n\tclient: Client,\n\tpluginOptions: PluginOptions,\n\trepositoryConfig: RepositoryConfig,\n\tcustomTypeModels: CustomTypeModel[],\n\tsharedSliceModels: SharedSliceModel[],\n\tabortController: AbortController,\n\titerationCount = 0,\n\tmaximumIterationCount = 3,\n\taggregateAlreadyFetchedIDs: string[] = [],\n): Promise<void> => {\n\tif (iterationCount >= maximumIterationCount) {\n\t\tconsole.warn(\n\t\t\t`The maximum depth to which gatsby-plugin-prismic-previews will fetch linked documents (${maximumIterationCount} levels deep) was reached. Any Link field's \\`document\\` property nested below ${maximumIterationCount} levels deep will return undefined.`,\n\t\t);\n\n\t\treturn;\n\t}\n\n\tconst alreadyFetchedIDs = [\n\t\t...aggregateAlreadyFetchedIDs,\n\t\t...documents.map((doc) => doc.id),\n\t];\n\n\tconst ids = (\n\t\tawait Promise.all(\n\t\t\tdocuments.map(async (doc) => {\n\t\t\t\treturn extractLinkedDocumentIDs(\n\t\t\t\t\tdoc,\n\t\t\t\t\tcustomTypeModels,\n\t\t\t\t\tsharedSliceModels,\n\t\t\t\t);\n\t\t\t}),\n\t\t)\n\t).flat();\n\n\tconst prunedIDs = ids.filter((id) => !alreadyFetchedIDs.includes(id));\n\n\tif (prunedIDs.length > 0) {\n\t\tconst fetchedLinkedDocuments = await client.getAllByIDs(\n\t\t\t[...new Set(prunedIDs)],\n\t\t\t{ signal: abortController.signal },\n\t\t);\n\n\t\tawait Promise.all([\n\t\t\tPromise.all(\n\t\t\t\tfetchedLinkedDocuments.map(async (doc) => {\n\t\t\t\t\tconst model = customTypeModels.find(\n\t\t\t\t\t\t(customTypeModel) => customTypeModel.id === doc.type,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (model) {\n\t\t\t\t\t\tconst normalizedDocument = await normalizeDocument(\n\t\t\t\t\t\t\tdoc,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst state = usePrismicPreviewStore.getState();\n\t\t\t\t\t\tstate.addDocument(normalizedDocument);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t\tfetchLinkedDocuments(\n\t\t\t\tfetchedLinkedDocuments,\n\t\t\t\tclient,\n\t\t\t\tpluginOptions,\n\t\t\t\trepositoryConfig,\n\t\t\t\tcustomTypeModels,\n\t\t\t\tsharedSliceModels,\n\t\t\t\tabortController,\n\t\t\t\titerationCount + 1,\n\t\t\t\tmaximumIterationCount,\n\t\t\t\t[...alreadyFetchedIDs, ...prunedIDs],\n\t\t\t),\n\t\t]);\n\t}\n};\n","import { getPreviewCookie } from \"./getPreviewCookie\";\n\nexport const isReleasePreview = (): boolean => {\n\treturn /\\/previews\\/.*~.*\\?websitePreviewId/.test(getPreviewCookie() || \"\");\n};\n","import { Client, PrismicDocument, filter } from \"@prismicio/client\";\n\nimport { isReleasePreview } from \"./isReleasePreview\";\n\ntype FetchNewDocumentsArgs = {\n\tclient: Client;\n\tabortController: AbortController;\n};\n\nexport const fetchNewDocuments = async ({\n\tclient,\n\tabortController,\n}: FetchNewDocumentsArgs): Promise<PrismicDocument[]> => {\n\tconst signal = abortController.signal;\n\n\tconst first = await client.getFirst({ signal });\n\n\tif (isReleasePreview()) {\n\t\tconst rest = await client.dangerouslyGetAll({\n\t\t\tpredicates: [\n\t\t\t\tfilter.dateBetween(\n\t\t\t\t\t\"document.last_publication_date\",\n\t\t\t\t\tDate.parse(first.last_publication_date),\n\t\t\t\t\tDate.parse(first.last_publication_date) + 1000,\n\t\t\t\t),\n\t\t\t\tfilter.not(\"document.id\", first.id),\n\t\t\t],\n\t\t\tsignal,\n\t\t});\n\n\t\treturn [first, ...rest];\n\t} else {\n\t\treturn [first];\n\t}\n};\n","import { PrismicError } from \"./errors/PrismicError.js\";\nimport { isRepositoryName } from \"./isRepositoryName.js\";\nconst getGraphQLEndpoint = (repositoryName) => {\n  if (isRepositoryName(repositoryName)) {\n    return `https://${repositoryName}.cdn.prismic.io/graphql`;\n  } else {\n    throw new PrismicError(`An invalid Prismic repository name was given: ${repositoryName}`, void 0, void 0);\n  }\n};\nexport {\n  getGraphQLEndpoint\n};\n//# sourceMappingURL=getGraphQLEndpoint.js.map\n","import { Client, getGraphQLEndpoint } from \"@prismicio/client\";\n\nimport { PluginOptions } from \"../types\";\n\nimport { isReleasePreview } from \"./isReleasePreview\";\n\ntype FetchPublishedDocumentIDsGraphQLResult = {\n\tdata: {\n\t\t_allDocuments: {\n\t\t\tpageInfo: {\n\t\t\t\tendCursor: string;\n\t\t\t\thasNextPage: boolean;\n\t\t\t};\n\t\t\tedges: {\n\t\t\t\tnode: {\n\t\t\t\t\t_meta: {\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}[];\n\t\t};\n\t};\n};\n\ntype FetchPublishedDocumentIDsArgs = {\n\tclient: Client;\n\tabortController: AbortController;\n\tpluginOptions: PluginOptions;\n};\n\nexport const fetchPublishedDocumentIDs = async ({\n\tclient,\n\tabortController,\n\tpluginOptions,\n}: FetchPublishedDocumentIDsArgs): Promise<string[]> => {\n\tif (isReleasePreview()) {\n\t\tconst endpoint =\n\t\t\tpluginOptions.graphQLEndpoint ||\n\t\t\tgetGraphQLEndpoint(pluginOptions.repositoryName);\n\n\t\tconst existingIDs: string[] = [];\n\n\t\tlet after: string | undefined;\n\t\tlet hasNextPage = false;\n\t\tdo {\n\t\t\tconst url = new URL(endpoint);\n\t\t\tconst afterStr = after ? `,after:\"${after}\"` : \"\";\n\t\t\turl.searchParams.set(\n\t\t\t\t\"query\",\n\t\t\t\t`query AllDocumentIDs{_allDocuments(first:100${afterStr}){pageInfo{endCursor,hasNextPage}edges{node{_meta{id}}}}}`,\n\t\t\t);\n\n\t\t\tconst res = await client.graphQLFetch(url.toString(), {\n\t\t\t\tsignal: abortController.signal,\n\t\t\t});\n\t\t\tconst json: FetchPublishedDocumentIDsGraphQLResult = await res.json();\n\n\t\t\tfor (let i = 0; i < json.data._allDocuments.edges.length; i++) {\n\t\t\t\texistingIDs.push(json.data._allDocuments.edges[i].node._meta.id);\n\t\t\t}\n\n\t\t\tafter = json.data._allDocuments.pageInfo.endCursor;\n\t\t\thasNextPage = json.data._allDocuments.pageInfo.hasNextPage;\n\t\t} while (hasNextPage);\n\n\t\treturn existingIDs;\n\t} else {\n\t\treturn [];\n\t}\n};\n","import { CustomTypeModel, SharedSliceModel } from \"@prismicio/client\";\nimport { withAssetPrefix } from \"gatsby\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nimport { fetchLinkedDocuments } from \"./fetchLinkedDocuments\";\nimport { fetchNewDocuments } from \"./fetchNewDocuments\";\nimport { fetchPublishedDocumentIDs } from \"./fetchPublishedDocumentIDs\";\nimport { fmtLog } from \"./fmtLog\";\nimport { getClient } from \"./getClient\";\nimport { getPluginOptions } from \"./getPluginOptions\";\nimport { getRepositoryConfig } from \"./getRepositoryConfig\";\nimport { normalizeDocument } from \"./normalizeDocument\";\n\nconst bootstrapPrismicPreview = async (\n\trepositoryName: string,\n\tabortController: AbortController,\n): Promise<void> => {\n\tconst state = usePrismicPreviewStore.getState();\n\n\t// Only bootstrap once per session\n\tif (state.isBootstrapped) {\n\t\treturn;\n\t}\n\n\tconst pluginOptions = getPluginOptions(repositoryName);\n\tif (!pluginOptions) {\n\t\tconsole.error(\n\t\t\tfmtLog(\n\t\t\t\trepositoryName,\n\t\t\t\t'Plugin options could not be found. Did you add \"gatsby-plugin-prismic-previews\" for this repository to your app\\'s \"gatsby-config.js\" file?',\n\t\t\t),\n\t\t);\n\n\t\treturn;\n\t}\n\n\tconst repositoryConfig = getRepositoryConfig(repositoryName);\n\tif (!repositoryConfig) {\n\t\tconsole.error(\n\t\t\tfmtLog(\n\t\t\t\trepositoryName,\n\t\t\t\t'Repository configuration could not be found. Did you add <PrismicPreviewProvider> to your \"gatsby-browser.js\" and \"gatsby-ssr.js\"? It must contain a repository configuration object for this repository.',\n\t\t\t),\n\t\t);\n\n\t\treturn;\n\t}\n\n\tconst client = getClient(pluginOptions);\n\n\tconst signal = abortController.signal;\n\n\t// @ts-expect-error - `getCachedRepository()` is a private internal\n\t// client method. We use it here to manually prime the cached\n\t// repository cache. This saves us from fetching the repository\n\t// multiple times when we run queries in parallel in the next block.\n\tawait client.getCachedRepository();\n\n\tconst [localPublishedDocumentIDs, newDocuments] = await Promise.all([\n\t\tfetchPublishedDocumentIDs({\n\t\t\tclient,\n\t\t\tabortController,\n\t\t\tpluginOptions,\n\t\t}),\n\t\tfetchNewDocuments({ client, abortController }),\n\t]);\n\n\tif (localPublishedDocumentIDs.length) {\n\t\tstate.setPublishedDocumentIDs(localPublishedDocumentIDs);\n\t}\n\n\tconst modelsRaw = await fetch(withAssetPrefix(__PUBLIC_MODELS_PATH__), {\n\t\tsignal,\n\t});\n\tconst models: Record<\n\t\tstring,\n\t\t{\n\t\t\tcustomTypeModels: CustomTypeModel[];\n\t\t\tsharedSliceModels: SharedSliceModel[];\n\t\t}\n\t> = await modelsRaw.json();\n\n\tconst modelsForRepository = models[pluginOptions.repositoryName];\n\n\tawait Promise.all([\n\t\tfetchLinkedDocuments(\n\t\t\tnewDocuments,\n\t\t\tclient,\n\t\t\tpluginOptions,\n\t\t\trepositoryConfig,\n\t\t\tmodelsForRepository.customTypeModels,\n\t\t\tmodelsForRepository.sharedSliceModels,\n\t\t\tabortController,\n\t\t),\n\t\tPromise.all(\n\t\t\tnewDocuments.map(async (doc) => {\n\t\t\t\tconst model = modelsForRepository.customTypeModels.find(\n\t\t\t\t\t(model) => model.id === doc.type,\n\t\t\t\t);\n\n\t\t\t\tif (model) {\n\t\t\t\t\tconst normalizedDocument = await normalizeDocument(\n\t\t\t\t\t\tdoc,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tmodelsForRepository.sharedSliceModels,\n\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t);\n\n\t\t\t\t\tstate.addDocument(normalizedDocument);\n\t\t\t\t}\n\t\t\t}),\n\t\t),\n\t]);\n\n\tstate.setIsBootstrapped(true);\n};\n\nexport default bootstrapPrismicPreview;\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","g","p","f","w","y","b","e","console","warn","v","sortNumeric","t","E","getSizes","k","src","width","S","lastIndexOf","a","M","layout","height","sourceMetadata","s","breakpoints","r","aspectRatio","n","formats","o","l","h","Math","round","I","from","Set","concat","_toConsumableArray","sort","_ref3","fit","outputPixelDensities","d","j","min","c","includes","push","sizes","presentationWidth","presentationHeight","unscaledWidth","Number","MAX_SAFE_INTEGER","max","L","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","className","style","D","baseUrl","urlBuilder","sourceWidth","sourceHeight","pluginName","u","generateImageSource","filename","reporter","backgroundColor","placeholderURL","Error","format","size","has","delete","add","Object","entries","_ref","_ref2","N","sources","$","forEach","Boolean","find","fallback","srcSet","type","images","placeholder","P","loading","shouldLoad","opacity","A","position","top","left","bottom","right","objectFit","objectPosition","transition","H","F","_ref5","paddingTop","maxWidth","display","alt","role","G","children","V","B","U","decoding","Y","_ref6","media","key","X","propTypes","isRequired","displayName","J","Z","K","Q","ee","te","ae","_len","arguments","_key","apply","ie","image","se","re","ne","oe","le","de","as","class","onStartLoad","onLoad","onError","JSON","stringify","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","ge","imgClassName","imgStyle","pe","_len2","_key2","me","fe","we","CustomTypeModelFieldType","CustomTypeModelSliceType","isNonNullish","isNonEmptyArray","richText","field","text","thumbnail","url","matchHtmlRegExp","escapeHTML","str","match","exec","escape","html","index","charCodeAt","substring","formatAttributes","node","attributes","_attributes","data","label","result","value","unshift","getGeneralAttributes","serializerOrShorthand","serializeStandardTag","tag","generalAttributes","serializePreFormatted","serializeImage","linkResolver","copyright","imageTag","linkTo","serializeHyperlink","start","end","serializeEmbed","oembed","embed_url","provider_name","link_type","Web","href","target","rel","Document","asLink","Media","RichTextNodeType","uuid","toString","createTreeNode","createTextTreeNode","spans","prepareNodes","nodes","mutNodes","items","splice","nodeToTreeNode","textNodeSpansToTreeNodeChildren","parentSpan","mutSpans","span","parentSpanStart","spanStart","spanEnd","childSpans","siblingSpan","spanWithText","serialize","richTextField","serializer","serializeTreeNodes","preparedNodes","asTree","serializedTreeNodes","treeNode","serializedTreeNode","RichTextReversedNodeType","createHTMLRichTextSerializer","useSerializerOrDefault","nodeSerializerOrShorthand","defaultWithShorthand","payload","mapSerializer","heading1","heading2","heading3","heading4","heading5","heading6","paragraph","preformatted","strong","em","listItem","oListItem","list","oList","embed","hyperlink","wrapMapSerializerWithStringChildren","modifiedMapSerializer","tagSerializer","wrapMapSerializer","buildURL","params","instance","URL","camelCasedParamKey","paramKey","paramValue","searchParams","set","get","append","DEFAULT_IMGIX_PARAMS","__assign","assign","hasOwnProperty","call","this","create","SuppressedError","lowerCase","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","reduce","pascalCaseTransform","firstChar","lowerChars","substr","pascalCaseTransformMerge","_a","splitRegexp","_b","stripRegexp","_c","transform","_d","delimiter","split","noCase","pascalCase$1","defaultTransformFieldName","fieldName","withDocumentProxy","repositoryConfig","Proxy","target2","prop","receiver","id","getDocument","document","raw","Reflect","imgixGatsbyImageDataUrlBuilder","args","imageImgixParams","fm","normalizeImageField","pluginOptions","isFilled","gatsbyImageData","getImageData","dimensions","localFile","publicURL","childImageSharp","normalizeField","async","looseModel","looseValue","path","sharedSliceModels","slices","Promise","all","sliceModel","config","choices","slice_type","__typename","typePrefix","primary","normalizeFields","item","repeat","typedSlice","sharedSliceModel","variationModel","variations","variation","group2","model","fields","_asLink","configObjectOrTuple","configObjectOrLinkResolver","maybeSerializer","serializers","res","composeSerializers","asHTML","htmlSerializer","configObjectOrSeparator","separator","asText","thumbnails","transformFieldName","thumbnailModel","name","models","fieldNames","keys","transformedFieldName","normalizeDocument","_asLink2","normalizedDocument","_previewable","prismicId","dataRaw","alternate_languages","alternateLanguage","fieldModels","values","json","extractLinkedDocumentIDsFromFields","flat","isBroken","extractLinkedDocumentIDsFromField","fetchLinkedDocuments","documents","client","customTypeModels","abortController","iterationCount","maximumIterationCount","aggregateAlreadyFetchedIDs","alreadyFetchedIDs","doc","ids","customTypeModel","linkedIDs","alternateLanguageIDs","extractLinkedDocumentIDs","prunedIDs","fetchedLinkedDocuments","getAllByIDs","signal","usePrismicPreviewStore","getState","addDocument","isReleasePreview","getPreviewCookie","fetchNewDocuments","first","getFirst","rest","dangerouslyGetAll","predicates","dateBetween","Date","parse","last_publication_date","not","fetchPublishedDocumentIDs","endpoint","graphQLEndpoint","repositoryName","isRepositoryName","PrismicError","getGraphQLEndpoint","existingIDs","after","hasNextPage","afterStr","graphQLFetch","_allDocuments","edges","_meta","pageInfo","endCursor","bootstrapPrismicPreview","state","isBootstrapped","getPluginOptions","error","fmtLog","getRepositoryConfig","getClient","getCachedRepository","localPublishedDocumentIDs","newDocuments","setPublishedDocumentIDs","modelsRaw","fetch","withAssetPrefix","__PUBLIC_MODELS_PATH__","modelsForRepository","model2","setIsBootstrapped"],"sourceRoot":""}