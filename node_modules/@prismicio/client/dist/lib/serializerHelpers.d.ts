import type { RichTextMapSerializer } from "../richtext/types";
import { HTMLRichTextMapSerializer, HTMLStrictRichTextMapSerializer } from "../helpers/asHTML";
import { LinkResolverFunction } from "../helpers/asLink";
export declare const serializeStandardTag: <BlockType extends keyof RichTextMapSerializer<string>>(tag: string, serializerOrShorthand?: HTMLRichTextMapSerializer[BlockType] | undefined) => NonNullable<HTMLStrictRichTextMapSerializer[BlockType]>;
export declare const serializePreFormatted: (serializerOrShorthand?: HTMLRichTextMapSerializer["preformatted"]) => NonNullable<HTMLStrictRichTextMapSerializer["preformatted"]>;
export declare const serializeImage: (linkResolver: LinkResolverFunction<string | null | undefined> | undefined | null, serializerOrShorthand?: HTMLRichTextMapSerializer["image"]) => NonNullable<HTMLStrictRichTextMapSerializer["image"]>;
export declare const serializeEmbed: (serializerOrShorthand?: HTMLRichTextMapSerializer["embed"]) => NonNullable<HTMLStrictRichTextMapSerializer["embed"]>;
export declare const serializeHyperlink: (linkResolver: LinkResolverFunction<string | null | undefined> | undefined | null, serializerOrShorthand?: HTMLRichTextMapSerializer["hyperlink"]) => NonNullable<HTMLStrictRichTextMapSerializer["hyperlink"]>;
export declare const serializeSpan: () => NonNullable<HTMLStrictRichTextMapSerializer["span"]>;
